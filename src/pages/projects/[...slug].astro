---
import { CollectionEntry, getCollection } from 'astro:content';
import Command from '../../components/command.astro';
import Prose from '../../components/prose.astro';
import Table from '../../components/table.astro';
import Base from '../../layouts/base.astro';

export async function getStaticPaths() {
    const projectEntries = await getCollection('projects');
    return projectEntries.map((entry) => ({
        params: { slug: entry.slug },
        props: { entry },
    }));
}

interface Props {
    entry: CollectionEntry<'projects'>;
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Base title={`${entry.data.title} - rileyflynn.me`} description={entry.data.summary}>
    <Command command={`kubectl describe project ${entry.slug}`} />
    Name: {entry.data.title}<br />
    Summary: {entry.data.summary}<br />

    <br />

    {
        entry.data.links && (
            <>
                <Command command={`kubectl get services -n ${entry.slug}`} />
                <Table
                    lines={[
                        [{ text: 'NAME' }, { text: 'URL' }],
                        ...entry.data.links.map((link) => [{ text: link.label }, { text: link.url, link: link.url }]),
                    ]}
                />
                <br />
            </>
        )
    }

    {
        entry.body && (
            <>
                <Command command={`kubectl get project ${entry.slug} --output=markdown`} />
                <Prose>
                    <Content />
                </Prose>
            </>
        )
    }
</Base>
