---
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import Command from '../../components/command.astro';
import Prose from '../../components/prose.astro';
import Table from '../../components/table.astro';
import Base from '../../layouts/base.astro';
import { MonthYearDateFormat } from '../../utils/date_formats';

export async function getStaticPaths() {
    const jobEntries = await getCollection('jobs');
    return jobEntries.map((entry) => ({
        params: { slug: entry.slug },
        props: { entry },
    }));
}

interface Props {
    entry: CollectionEntry<'jobs'>;
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Base title={`${entry.data.title} - rileyflynn.me`}>
    <Command command={`kubectl describe job ${entry.slug}`} />
    <pre>
Name: {entry.data.title}
<span class="text-[#FF00FF]">ADD MORE CONTENT</span>
    </pre>
    <Table
        lines={[
            [{ text: 'Title' }, { text: 'Start Date' }, { text: 'End Date' }],
            ...entry.data.positions.map((position) => [
                { text: position.title },
                { text: MonthYearDateFormat.format(position.startMonth) },
                { text: position.endMonth ? MonthYearDateFormat.format(position.endMonth) : '' },
            ]),
        ]}
        includeHeadingLine
    />

    <br />

    {
        entry.body && (
            <>
                <Command command={`kubectl get job ${entry.slug} --output=markdown`} />
                <Prose>
                    <Content />
                </Prose>
            </>
        )
    }
</Base>
