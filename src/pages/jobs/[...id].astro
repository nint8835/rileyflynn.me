---
import type { CollectionEntry } from 'astro:content';
import { getCollection, render } from 'astro:content';
import Command from '../../components/command.astro';
import Describe from '../../components/describe.astro';
import Prose from '../../components/prose.astro';
import Table from '../../components/table.astro';
import Base from '../../layouts/base.astro';
import { MonthYearDateFormat } from '../../utils/date_formats';

export async function getStaticPaths() {
    const jobEntries = await getCollection('jobs');
    return jobEntries.map((entry) => ({
        params: { id: entry.id },
        props: { entry },
    }));
}

interface Props {
    entry: CollectionEntry<'jobs'>;
}

const { entry } = Astro.props;
const { Content } = await render(entry);
---

<Base title={`${entry.data.title} - rileyflynn.me`} description={`Details about my work at ${entry.data.title}.`}>
    <Command command={`kubectl describe job ${entry.id}`} />
    <Describe
        items={[
            {
                label: 'Name',
                value: entry.data.title,
            },
            {
                label: 'Summary',
                value: entry.data.summary,
            },
        ]}
    />

    <br />

    <Table
        lines={[
            [{ text: 'Title' }, { text: 'Start Date' }, { text: 'End Date' }],
            ...entry.data.positions.map((position) => [
                { text: position.title },
                { text: MonthYearDateFormat.format(position.startMonth) },
                { text: position.endMonth ? MonthYearDateFormat.format(position.endMonth) : '' },
            ]),
        ]}
        includeHeadingLine
    />

    <br />

    {
        entry.data.links && (
            <>
                <Command command={`kubectl get services -n ${entry.id}`} />
                <Table
                    lines={[
                        [{ text: 'NAME' }, { text: 'URL' }],
                        ...entry.data.links.map((link) => [{ text: link.label }, { text: link.url, link: link.url }]),
                    ]}
                />
                <br />
            </>
        )
    }

    {
        entry.body && (
            <>
                <Command command={`kubectl get job ${entry.id} --output=markdown`} />
                <Prose>
                    <Content />
                </Prose>
            </>
        )
    }
</Base>
